<?php

/**
 * @file
 * Integration of the Infusion User Interface Options with Drupal.
 */

/**
 * Implements hook_help().
 */
function infusion_uio_help($path, $arg) {
  switch ($path) {
    case 'admin/help#infusion_uio': {
        $uiohelp = '<h3>' . t('About') . '</h3>';
        $uiohelp .= '<p>' . t('The Infusion User Interface Options module integrates the Infusion UIO component with Drupal.') . '</p>';
        $uiohelp .= '<p>' . t('Infusion\'s UI Options component allows users to personalize interfaces and content to meet individual needs and preferences.') . '</p>';
        $uiohelp .= '<p>' . t('It currently has the following features:') . '<ul>';
        $uiohelp .= '<li>' . t('Text Size') . '</li>';
        $uiohelp .= '<li>' . t('Text Style') . '</li>';
        $uiohelp .= '<li>' . t('Line Spacing') . '</li>';
        $uiohelp .= '<li>' . t('Colour and Contrast') . '</li>';
        $uiohelp .= '<li>' . t('Display Table of Contents') . '</li>';
        $uiohelp .= '<li>' . t('Emphasize Links') . '</li></ul></p>';
        return $uiohelp;
        break;
      }
  }
}

/**
 * Implements hook_menu().
 */
function infusion_uio_menu() {
  // Admin config page.
  $items['admin/config/user-interface/infusion-uio'] = array(
    'title' => 'Infusion UI Options settings',
    'description' => 'Configure Infusion User Interface Options',
    'access arguments' => array('administer site configuration'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('infusion_ui_settings_form'),
  );

  return $items;
}

/**
 * Implements hook_form().
 */
function infusion_ui_settings_form($node, &$form_state) {
  $uio_options = array(t('Fat Panel Options'), t('Full Page'), t('Full Page With Preview'));
  $form['infusion_uio_interface'] = array(
    '#type' => 'radios',
    '#title' => t('Select the default UIO interface'),
    '#default_value' => variable_get('infusion_uio_interface', 'Fat Panel Options'),
    '#options' => drupal_map_assoc($uio_options),
  );
  $form['btn_text'] = array(
    '#type' => 'fieldset',
    '#title' => t('Custom Show/Hide Button Text'),
    '#description' => t('Customize the Show/Hide button for your UIO'),
    '#collapsible' => 'TRUE',
    '#collapsed' => 'TRUE',
  );
  $form['btn_text']['infusion_uio_show_btn'] = array(
    '#type' => 'textfield',
    '#default_value' => variable_get('infusion_uio_show_btn', 'Preferences'),
    '#maxlength' => 128,
    '#required' => TRUE,
    '#title' => t('Show Button'),
    '#description' => t('Enter a custom text for the \'Show\' button'),
  );
  $form['btn_text']['infusion_uio_hide_btn'] = array(
    '#type' => 'textfield',
    '#default_value' => variable_get('infusion_uio_hide_btn', 'Preferences'),
    '#maxlength' => 128,
    '#required' => TRUE,
    '#title' => t('Hide Button'),
    '#description' => t('Enter a custom text for the \'Hide\' button'),
  );
  return system_settings_form($form);
}

/**
 * Implements hook_libraries_info().
 *
 * For defining external libraries.
 */
function infusion_uio_libraries_info() {
  $libraries['infusion'] = array(
    'name' => 'Infusion',
    'vendor url' => 'http://www.fluidproject.org/',
    'download url' => 'http://builder.fluidproject.org/',
    'version arguments' => array(
      'file' => 'ReleaseNotes.txt',
      'pattern' => '/Infusion\s(\d(.)\d)/',
      'lines' => 2,
    ),
    'files' => array(
      'js' => array(
        'MyInfusion.js',
      ),
      'css' => array(
        'framework/fss/css/fss-layout.css',
        'framework/fss/css/fss-text.css',
        'components/uiOptions/css/fss/fss-theme-bw-uio.css',
        'components/uiOptions/css/fss/fss-theme-wb-uio.css',
        'components/uiOptions/css/fss/fss-theme-by-uio.css',
        'components/uiOptions/css/fss/fss-theme-yb-uio.css',
        'components/uiOptions/css/fss/fss-text-uio.css',
//        'lib/jquery/ui/css/fl-theme-hc/hc.css',
//        'lib/jquery/ui/css/fl-theme-hci/hci.css',
      )
    ),
  );
  return $libraries;
}

/**
 * Implements hook_page_alter().
 */
function infusion_uio_page_alter(&$vars) {
  //Load the Infusion library
  drupal_add_library('system', 'ui.tabs');
  libraries_load('infusion');
$lib_path = $GLOBALS['base_url'] . '/' . libraries_get_path('infusion');
  //Define some settings for this module and pass it to Drupal.settings.
  $uio_interface = variable_get('infusion_uio_interface', 'Fat Panel Options');
  $uio_fp_showbtn = variable_get('infusion_uio_show_btn', 'Preferences');
  $uio_fp_hidebtn = variable_get('infusion_uio_hide_btn', 'Preferences');
  $uio_settings = array(
    'uio_interface' => $uio_interface,
    'fp_show_btn' => $uio_fp_showbtn,
    'fp_hide_btn' => $uio_fp_hidebtn,
    'library_path' => $lib_path,
  );
  drupal_add_js(array('infusion_uio' => $uio_settings), 'setting');

  //Add this module's javascript file
  $script = drupal_get_path('module', 'infusion_uio') . '/functions1.5.js';
  $options = array('scope' => 'footer');
  drupal_add_js($script, $options);

  //Add another js file
  $script2 = drupal_get_path('module', 'infusion_uio') . '/orig-infusion_uio.js';
  $options2 = array('scope' => 'footer');
  drupal_add_js($script2, $options2);

}

/**
 * Implements hook_preprocess_html().
 */
function infusion_uio_preprocess_html(&$variables) {
  //setup some variables
  $uio_path = $GLOBALS['base_url'] . '/' . libraries_get_path('infusion');

  //Add the Page Enhancer class to body tag
  $variables['classes_array'][] = 'uio-demo-theme';

  //Add the container divs for the different UIOs
  $uio_interface = variable_get('infusion_uio_interface', 'Fat Panel Options');
  switch ($uio_interface) {
    case 'Fat Panel Options':
      $variables['page']['page_top']['uio_fat_panel'] = array(
        '#markup' => '<div class="flc-uiOptions-fatPanel fl-uiOptions-fatPanel"> 
                      <div id="myUIOptions" class="flc-slidingPanel-panel flc-uiOptions-iframe"></div>
                      <div class="fl-panelBar"><span class="fl-uio-tabs">
	                <button id="reset" class="flc-uiOptions-reset fl-uiOptions-reset"><span class="fl-icon-undo"></span> Reset</button>
	            	<button id="show-hide" class="flc-slidingPanel-toggleButton fl-uiOptions-showHide"> Show/Hide</button>
            	</span></div>
                      </div>',
        '#attached' => array(
          'css' => array($uio_path . '/components/uiOptions/css/FatPanelUIOptions.css')
        ),
        '#weight' => 2,
      );
      break;
    case 'Full Page':

      break;
    case 'Full Page With Preview':

      break;
  }
  //Add the container div for the Infusion Table of Contents
  $variables['page']['page_top']['uio_toc'] = array(
    '#markup' => '<div class="flc-toc-tocContainer"> </div>',
    '#weight' => 3,
  );

  //Make sure the admin toolbar if enabled remains at the top
  if (array_key_exists('toolbar', $variables['page']['page_top'])) {
    $variables['page']['page_top']['toolbar']['#weight'] = 1;
  }

  $variables['page']['page_top']['#sorted'] = FALSE;
}